import cp.
import util.

main => go.

go => 
  go(N),
  println(N).

go(N) =>
  % insert generated constraints here
  and16(V_af,V_ah,V_ai),
  not16(V_lk,V_ll),
  shift_right16(V_hz,1,V_is),
  not16(V_go,V_gp),
  or16(V_du,V_dt,V_dv),
  shift_right16(V_x,5,V_aa),
  or16(V_at,V_az,V_ba),
  shift_left16(V_eo,15,V_es),
  or16(V_ci,V_ct,V_cu),
  shift_right16(V_b,5,V_f),
  or16(V_fm,V_fn,V_fo),
  not16(V_ag,V_ah),
  or16(V_v,V_w,V_x),
  and16(V_g,V_i,V_j),
  shift_left16(V_an,15,V_ar),
  and16(1,V_cx,V_cy),
  and16(V_jq,V_jw,V_jy),
  shift_right16(V_iu,5,V_ix),
  and16(V_gl,V_gm,V_go),
  not16(V_bw,V_bx),
  shift_right16(V_jp,3,V_jr),
  and16(V_hg,V_hh,V_hj),
  and16(V_bv,V_bx,V_by),
  or16(V_er,V_es,V_et),
  or16(V_kl,V_kr,V_ks),
  shift_right16(V_et,1,V_fm),
  and16(V_e,V_f,V_h),
  shift_left16(V_u,1,V_ao),
  shift_right16(V_he,1,V_hx),
  and16(V_eg,V_ei,V_ej),
  and16(V_bo,V_bu,V_bw),
  or16(V_dz,V_ef,V_eg),
  shift_right16(V_dy,3,V_ea),
  or16(V_gl,V_gm,V_gn),
  shift_left16(V_da,1,V_du),
  or16(V_au,V_av,V_aw),
  or16(V_gj,V_gu,V_gv),
  or16(V_eu,V_fa,V_fb),
  or16(V_lg,V_lm,V_ln),
  or16(V_e,V_f,V_g),
  not16(V_dm,V_dn),
  not16(V_l,V_m),
  or16(V_aq,V_ar,V_as),
  shift_right16(V_gj,5,V_gm),
  and16(V_hm,V_ho,V_hp),
  shift_left16(V_ge,15,V_gi),
  shift_right16(V_jp,1,V_ki),
  or16(V_hg,V_hh,V_hi),
  shift_left16(V_lc,1,V_lw),
  or16(V_km,V_kn,V_ko),
  shift_left16(V_eq,1,V_fk),
  and16(1,V_am,V_an),
  shift_right16(V_gj,1,V_hc),
  and16(V_aj,V_al,V_am),
  and16(V_gj,V_gu,V_gw),
  and16(V_ko,V_kq,V_kr),
  or16(V_ha,V_gz,V_hb),
  or16(V_bn,V_by,V_bz),
  or16(V_iv,V_jb,V_jc),
  not16(V_ac,V_ad),
  or16(V_bo,V_bu,V_bv),
  and16(V_d,V_j,V_l),
  shift_left16(V_bk,1,V_ce),
  or16(V_de,V_dk,V_dl),
  shift_right16(V_dd,1,V_dw),
  and16(V_hz,V_ik,V_im),
  not16(V_jd,V_je),
  shift_right16(V_fo,2,V_fp),
  shift_left16(V_hb,1,V_hv),
  shift_right16(V_lf,2,V_lg),
  shift_right16(V_gj,3,V_gl),
  or16(V_ki,V_kj,V_kk),
  not16(V_ak,V_al),
  or16(V_ld,V_le,V_lf),
  shift_right16(V_ci,3,V_ck),
  and16(1,V_cc,V_cd),
  not16(V_kx,V_ky),
  or16(V_fp,V_fv,V_fw),
  and16(V_ev,V_ew,V_ey),
  shift_left16(V_dt,15,V_dx),
  not16(V_ax,V_ay),
  and16(V_bp,V_bq,V_bs),
  not16(V_ii,V_ij),
  and16(V_ci,V_ct,V_cv),
  or16(V_iq,V_ip,V_ir),
  shift_right16(V_x,2,V_y),
  or16(V_fq,V_fr,V_fs),
  shift_right16(V_bn,5,V_bq),
  V_c #= 0,
  V_b #= 956, % output from V_a in part 1
  or16(V_d,V_j,V_k),
  or16(V_z,V_aa,V_ab),
  or16(V_gf,V_ge,V_gg),
  or16(V_df,V_dg,V_dh),
  not16(V_hj,V_hk),
  not16(V_di,V_dj),
  shift_left16(V_fj,15,V_fn),
  shift_right16(V_lf,1,V_ly),
  and16(V_b,V_n,V_p),
  or16(V_jq,V_jw,V_jx),
  and16(V_gn,V_gp,V_gq),
  shift_right16(V_x,1,V_aq),
  and16(V_ex,V_ez,V_fa),
  not16(V_fc,V_fd),
  or16(V_bj,V_bi,V_bk),
  shift_right16(V_as,5,V_av),
  shift_left16(V_hu,15,V_hy),
  not16(V_gs,V_gt),
  and16(V_fs,V_fu,V_fv),
  and16(V_dh,V_dj,V_dk),
  and16(V_bz,V_cb,V_cc),
  shift_right16(V_dy,1,V_er),
  or16(V_hc,V_hd,V_he),
  or16(V_fo,V_fz,V_ga),
  or16(V_t,V_s,V_u),
  shift_right16(V_b,2,V_d),
  not16(V_jy,V_jz),
  shift_right16(V_hz,2,V_ia),
  and16(V_kk,V_kv,V_kx),
  and16(V_ga,V_gc,V_gd),
  shift_left16(V_fl,1,V_gf),
  and16(V_bn,V_by,V_ca),
  not16(V_hr,V_hs),
  not16(V_bs,V_bt),
  shift_right16(V_lf,3,V_lh),
  and16(V_au,V_av,V_ax),
  and16(1,V_gd,V_ge),
  or16(V_jr,V_js,V_jt),
  and16(V_fw,V_fy,V_fz),
  not16(V_iz,V_ja),
  shift_left16(V_c,1,V_t),
  shift_right16(V_dy,5,V_eb),
  or16(V_bp,V_bq,V_br),
  not16(V_h,V_i),
  and16(1,V_ds,V_dt),
  and16(V_ab,V_ad,V_ae),
  shift_left16(V_ap,1,V_bj),
  and16(V_br,V_bt,V_bu),
  not16(V_ca,V_cb),
  not16(V_el,V_em),
  shift_left16(V_s,15,V_w),
  or16(V_gk,V_gq,V_gr),
  and16(V_ff,V_fh,V_fi),
  shift_left16(V_kf,15,V_kj),
  and16(V_fp,V_fv,V_fx),
  or16(V_lh,V_li,V_lj),
  shift_right16(V_bn,3,V_bp),
  or16(V_jp,V_ka,V_kb),
  or16(V_lw,V_lv,V_lx),
  and16(V_iy,V_ja,V_jb),
  or16(V_dy,V_ej,V_ek),
  and16(1,V_bh,V_bi),
  not16(V_kt,V_ku),
  or16(V_ao,V_an,V_ap),
  and16(V_ia,V_ig,V_ii),
  not16(V_ey,V_ez),
  shift_right16(V_bn,1,V_cg),
  or16(V_fk,V_fj,V_fl),
  or16(V_ce,V_cd,V_cf),
  and16(V_eu,V_fa,V_fc),
  or16(V_kg,V_kf,V_kh),
  and16(V_jr,V_js,V_ju),
  shift_right16(V_iu,3,V_iw),
  and16(V_df,V_dg,V_di),
  and16(V_dl,V_dn,V_do),
  shift_left16(V_la,15,V_le),
  shift_right16(V_fo,1,V_gh),
  not16(V_gw,V_gx),
  not16(V_gb,V_gc),
  shift_left16(V_ir,1,V_jl),
  and16(V_x,V_ai,V_ak),
  shift_right16(V_he,5,V_hh),
  and16(1,V_lu,V_lv),
  not16(V_ft,V_fu),
  or16(V_gh,V_gi,V_gj),
  shift_right16(V_lf,5,V_li),
  shift_right16(V_x,3,V_z),
  shift_right16(V_b,3,V_e),
  shift_right16(V_he,2,V_hf),
  not16(V_fx,V_fy),
  and16(V_jt,V_jv,V_jw),
  or16(V_hx,V_hy,V_hz),
  and16(V_jp,V_ka,V_kc),
  and16(V_fb,V_fd,V_fe),
  or16(V_hz,V_ik,V_il),
  shift_right16(V_ci,1,V_db),
  and16(V_fo,V_fz,V_gb),
  and16(V_fq,V_fr,V_ft),
  shift_right16(V_gj,2,V_gk),
  or16(V_cg,V_ch,V_ci),
  shift_left16(V_cd,15,V_ch),
  shift_left16(V_jm,1,V_kg),
  and16(V_ih,V_ij,V_ik),
  shift_right16(V_fo,3,V_fq),
  shift_right16(V_fo,5,V_fr),
  and16(1,V_fi,V_fj),
  and16(1,V_kz,V_la),
  and16(V_iu,V_jf,V_jh),
  and16(V_cq,V_cs,V_ct),
  shift_left16(V_dv,1,V_ep),
  or16(V_hf,V_hl,V_hm),
  and16(V_km,V_kn,V_kp),
  and16(V_de,V_dk,V_dm),
  shift_right16(V_dd,5,V_dg),
  not16(V_lo,V_lp),
  not16(V_ju,V_jv),
  not16(V_fg,V_fh),
  and16(V_cm,V_co,V_cp),
  and16(V_ea,V_eb,V_ed),
  shift_right16(V_dd,3,V_df),
  and16(V_gr,V_gt,V_gu),
  or16(V_ep,V_eo,V_eq),
  and16(V_cj,V_cp,V_cr),
  or16(V_lf,V_lq,V_lr),
  shift_left16(V_gg,1,V_ha),
  shift_right16(V_et,2,V_eu),
  not16(V_jh,V_ji),
  and16(V_ek,V_em,V_en),
  shift_left16(V_jk,15,V_jo),
  or16(V_ia,V_ig,V_ih),
  and16(V_gv,V_gx,V_gy),
  and16(V_et,V_fe,V_fg),
  and16(V_lh,V_li,V_lk),
  and16(1,V_io,V_ip),
  and16(V_kb,V_kd,V_ke),
  shift_right16(V_kk,5,V_kn),
  and16(V_id,V_if,V_ig),
  not16(V_ls,V_lt),
  or16(V_dw,V_dx,V_dy),
  and16(V_dd,V_do,V_dq),
  and16(V_lf,V_lq,V_ls),
  not16(V_kc,V_kd),
  and16(V_dy,V_ej,V_el),
  and16(1,V_ke,V_kf),
  or16(V_et,V_fe,V_ff),
  shift_right16(V_hz,5,V_ic),
  or16(V_dd,V_do,V_dp),
  or16(V_cj,V_cp,V_cq),
  not16(V_dq,V_dr),
  shift_right16(V_kk,1,V_ld),
  and16(V_jg,V_ji,V_jj),
  or16(V_he,V_hp,V_hq),
  and16(V_hi,V_hk,V_hl),
  and16(V_dp,V_dr,V_ds),
  and16(V_dz,V_ef,V_eh),
  shift_right16(V_hz,3,V_ib),
  or16(V_db,V_dc,V_dd),
  shift_left16(V_hw,1,V_iq),
  and16(V_he,V_hp,V_hr),
  not16(V_cr,V_cs),
  and16(V_lg,V_lm,V_lo),
  or16(V_hv,V_hu,V_hw),
  and16(V_il,V_in,V_io),
  not16(V_eh,V_ei),
  shift_left16(V_gz,15,V_hd),
  and16(V_gk,V_gq,V_gs),
  and16(1,V_en,V_eo),
  not16(V_kp,V_kq),
  shift_right16(V_et,5,V_ew),
  and16(V_lj,V_ll,V_lm),
  shift_right16(V_he,3,V_hg),
  shift_right16(V_et,3,V_ev),
  and16(V_as,V_bd,V_bf),
  and16(V_cu,V_cw,V_cx),
  and16(V_jx,V_jz,V_ka),
  or16(V_b,V_n,V_o),
  and16(V_be,V_bg,V_bh),
  and16(1,V_ht,V_hu),
  and16(1,V_gy,V_gz),
  not16(V_hn,V_ho),
  or16(V_ck,V_cl,V_cm),
  and16(V_ec,V_ee,V_ef),
  shift_left16(V_lv,15,V_lz),
  and16(V_ks,V_ku,V_kv),
  not16(V_ie,V_if),
  and16(V_hf,V_hl,V_hn),
  and16(1,V_r,V_s),
  and16(V_ib,V_ic,V_ie),
  and16(V_hq,V_hs,V_ht),
  and16(V_y,V_ae,V_ag),
  not16(V_ed,V_ee),
  shift_left16(V_bi,15,V_bm),
  shift_right16(V_dy,2,V_dz),
  shift_right16(V_ci,2,V_cj),
  not16(V_bf,V_bg),
  not16(V_im,V_in),
  or16(V_ev,V_ew,V_ex),
  or16(V_ib,V_ic,V_id),
  shift_right16(V_bn,2,V_bo),
  shift_right16(V_dd,2,V_de),
  or16(V_bl,V_bm,V_bn),
  shift_right16(V_as,1,V_bl),
  or16(V_ea,V_eb,V_ec),
  and16(V_ln,V_lp,V_lq),
  shift_right16(V_kk,3,V_km),
  or16(V_is,V_it,V_iu),
  shift_right16(V_iu,2,V_iv),
  or16(V_as,V_bd,V_be),
  shift_left16(V_ip,15,V_it),
  or16(V_iw,V_ix,V_iy),
  shift_right16(V_kk,2,V_kl),
  not16(V_bb,V_bc),
  shift_right16(V_ci,5,V_cl),
  or16(V_ly,V_lz,V_ma),
  and16(V_z,V_aa,V_ac),
  shift_right16(V_iu,1,V_jn),
  shift_left16(V_cy,15,V_dc),
  shift_left16(V_cf,1,V_cz),
  shift_right16(V_as,3,V_au),
  or16(V_cz,V_cy,V_da),
  and16(V_kw,V_ky,V_kz),
  V_a #= V_lx,
  and16(V_iw,V_ix,V_iz),
  and16(V_lr,V_lt,V_lu),
  shift_right16(V_jp,5,V_js),
  and16(V_aw,V_ay,V_az),
  and16(V_jc,V_je,V_jf),
  or16(V_lb,V_la,V_lc),
  not16(V_cn,V_co),
  shift_left16(V_kh,1,V_lb),
  and16(1,V_jj,V_jk),
  or16(V_y,V_ae,V_af),
  and16(V_ck,V_cl,V_cn),
  or16(V_kk,V_kv,V_kw),
  not16(V_cv,V_cw),
  and16(V_kl,V_kr,V_kt),
  or16(V_iu,V_jf,V_jg),
  and16(V_at,V_az,V_bb),
  shift_right16(V_jp,2,V_jq),
  and16(V_iv,V_jb,V_jd),
  or16(V_jn,V_jo,V_jp),
  or16(V_x,V_ai,V_aj),
  and16(V_ba,V_bc,V_bd),
  or16(V_jl,V_jk,V_jm),
  shift_right16(V_b,1,V_v),
  and16(V_o,V_q,V_r),
  not16(V_p,V_q),
  and16(V_k,V_m,V_n),
  shift_right16(V_as,2,V_at),
  Vars = [V_o,V_lm,V_ca,V_ay,V_gc,V_bn,V_fx,V_eq,V_dp,V_hr,V_ju,V_gd,V_jt,V_lw,V_ih,V_kj,V_fi,V_ea,V_bx,V_hb,V_he,V_ak,V_dz,V_h,V_cm,V_go,V_iq,V_ks,V_el,V_jg,V_li,V_au,V_at,V_s,V_cw,V_ia,V_gy,V_bj,V_fs,V_em,V_kc,V_dl,V_hn,V_jp,V_lr,V_kd,V_fc,V_bs,V_ew,V_dv,V_ag,V_df,V_hx,V_ci,V_lb,V_le,V_jz,V_gk,V_l,V_im,V_ko,V_bc,V_fn,V_eh,V_ap,V_cr,V_gu,V_bd,V_gt,V_fo,V_x,V_iw,V_dh,V_ma,V_ky,V_hj,V_jl,V_ln,V_cb,V_ce,V_az,V_c,V_bo,V_fy,V_er,V_dq,V_hs,V_jv,V_gg,V_jf,V_lx,V_ii,V_kk,V_p,V_fj,V_eb,V_ee,V_da,V_by,V_e,V_hc,V_al,V_cn,V_gp,V_ir,V_ku,V_hd,V_kt,V_jh,V_lj,V_av,V_af,V_cx,V_ib,V_bk,V_gz,V_ie,V_fu,V_en,V_ft,V_i,V_dm,V_ho,V_jq,V_ls,V_kg,V_fd,V_bu,V_bt,V_ex,V_u,V_dw,V_ah,V_ja,V_hy,V_cj,V_lc,V_gl,V_in,V_kp,V_ei,V_ld,V_aq,V_cs,V_gv,V_bg,V_gf,V_fp,V_ix,V_di,V_hk,V_kz,V_m,V_jm,V_aa,V_lo,V_cc,V_bp,V_fz,V_es,V_dr,V_cd,V_hu,V_ht,V_gh,V_y,V_jw,V_ly,V_ij,V_kl,V_fk,V_ec,V_db,V_bz,V_de,V_d,V_am,V_co,V_gq,V_is,V_hg,V_kv,V_kf,V_ji,V_lk,V_aw,V_q,V_ga,V_cy,V_ic,V_bl,V_fv,V_ff,V_eo,V_dn,V_hp,V_jr,V_id,V_lu,V_lt,V_kh,V_fg,V_bv,V_bf,V_ey,V_dx,V_ai,V_jb,V_hz,V_ck,V_je,V_j,V_gm,V_io,V_kq,V_ej,V_lg,V_ar,V_t,V_cu,V_ct,V_gw,V_bh,V_v,V_fq,V_ka,V_dj,V_iy,V_hl,V_jn,V_ab,V_ae,V_lp,V_a,V_fa,V_bq,V_eu,V_ds,V_et,V_hv,V_cg,V_hf,V_gi,V_jx,V_ik,V_lz,V_n,V_km,V_ba,V_fl,V_ed,V_dc,V_an,V_cp,V_gr,V_dd,V_iu,V_it,V_z,V_hh,V_kw,V_jj,V_ll,V_ax,V_gb,V_ge,V_cz,V_g,V_bm,V_fw,V_ep,V_do,V_hq,V_js,V_lv,V_ig,V_lf,V_ki,V_fh,V_bw,V_r,V_ez,V_ha,V_dy,V_aj,V_jc,V_cl,V_gn,V_ip,V_kr,V_ek,V_jd,V_lh,V_as,V_cv,V_cf,V_gx,V_bi,V_fr,V_kb,V_dk,V_ke,V_iz,V_k,V_hm,V_jo,V_ac,V_lq,V_fb,V_fe,V_f,V_br,V_ev,V_du,V_ad,V_ef,V_dt,V_w,V_hw,V_ch,V_la,V_jy,V_gj,V_il,V_kn,V_bb,V_fm,V_be,V_eg,V_b,V_ao,V_cq,V_gs,V_dg,V_iv,V_if,V_kx,V_hi,V_jk],
  Vars :: 0..65535,
  % end generated constraints

  %println(vars=Vars),
  solve([$report(printf("Vars=%w%n", V_a)),split], V_a),
  N = V_a.

shift_left16(A,B,Z) =>
  Z :: 0..65535,
  Z #= (A * 2**B) mod 65536.

shift_left16(A,B) = Z => shift_left16(A,B,Z).

shift_right16(A,B,Z) =>
  Z :: 0..65535,
  Z #= A // 2**B.

shift_right16(A,B) = Z => shift_right16(A,B,Z).

mod16(A,B,Z) =>
  Z :: 0..65535,
  Z #= A mod B.

mod16(A,B) = Z => mod(A,B,Z).

not16(A,Z) =>
  Z :: 0..65535,
  Z #= (65536 - (A+1)) mod 65536.

not16(A) = Z => not16(A,Z).

and16(A,B,Z) =>
  Z :: 0..65535,
  Z #= (A mod 2) * (B mod 2) +
      (((A//2) mod 2) * ((B//2) mod 2) * 2) +
      (((A//4) mod 2) * ((B//4) mod 2) * 4) +
      (((A//8) mod 2) * ((B//8) mod 2) * 8) +
      (((A//16) mod 2) * ((B//16) mod 2) * 16) +
      (((A//32) mod 2) * ((B//32) mod 2) * 32) +
      (((A//64) mod 2) * ((B//64) mod 2) * 64) +
      (((A//128) mod 2) * ((B//128) mod 2) * 128) +
      (((A//256) mod 2) * ((B//256) mod 2) * 256) +
      (((A//512) mod 2) * ((B//512) mod 2) * 512) +
      (((A//1024) mod 2) * ((B//1024) mod 2) * 1024) +
      (((A//2048) mod 2) * ((B//2048) mod 2) * 2048) +
      (((A//4096) mod 2) * ((B//4096) mod 2) * 4096) +
      (((A//8192) mod 2) * ((B//8192) mod 2) * 8192) +
      (((A//16384) mod 2) * ((B//16384) mod 2) * 16384) +
      (((A//32768) mod 2) * ((B//32768) mod 2) * 32768).

and16(A,B) = Z => and16(A,B,Z).

or16(A,B,Z) =>
  Z #= (((A mod 2) + (B mod 2) - (A mod 2)*(B mod 2))) +
       ((((A//2) mod 2) + ((B//2) mod 2) - ((A//2) mod 2)*((B//2) mod 2)) * 2) +
       ((((A//4) mod 2) + ((B//4) mod 2) - ((A//4) mod 2)*((B//4) mod 2)) * 4) +
       ((((A//8) mod 2) + ((B//8) mod 2) - ((A//8) mod 2)*((B//8) mod 2)) * 8) +
       ((((A//16) mod 2) + ((B//16) mod 2) - ((A//16) mod 2)*((B//16) mod 2)) * 16) +
       ((((A//32) mod 2) + ((B//32) mod 2) - ((A//32) mod 2)*((B//32) mod 2)) * 32) +
       ((((A//64) mod 2) + ((B//64) mod 2) - ((A//64) mod 2)*((B//64) mod 2)) * 64) +
       ((((A//128) mod 2) + ((B//128) mod 2) - ((A//128) mod 2)*((B//128) mod 2)) * 128) +
       ((((A//256) mod 2) + ((B//256) mod 2) - ((A//256) mod 2)*((B//256) mod 2)) * 256) +
       ((((A//512) mod 2) + ((B//512) mod 2) - ((A//512) mod 2)*((B//512) mod 2)) * 512) +
       ((((A//1024) mod 2) + ((B//1024) mod 2) - ((A//1024) mod 2)*((B//1024) mod 2)) * 1024) +
       ((((A//2048) mod 2) + ((B//2048) mod 2) - ((A//2048) mod 2)*((B//2048) mod 2)) * 2048) +
       ((((A//4096) mod 2) + ((B//4096) mod 2) - ((A//4096) mod 2)*((B//4096) mod 2)) * 4096) +
       ((((A//8192) mod 2) + ((B//8192) mod 2) - ((A//8192) mod 2)*((B//8192) mod 2)) * 8192) +
       ((((A//16384) mod 2) + ((B//16384) mod 2) - ((A//16384) mod 2)*((B//16384) mod 2)) * 16384) +
       ((((A//32768) mod 2) + ((B//32768) mod 2) - ((A//32768) mod 2)*((B//32768) mod 2)) * 32768).

or16(A,B) = Z => or16(A,B,Z).
